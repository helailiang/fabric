# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0

FROM ubuntu:20.04 as builder

ARG TARGETARCH=amd64
ARG TARGETOS=linux
ARG FABRIC_VER=hll
ARG GO_VER
ARG GO_TAGS

RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g'  /etc/apt/sources.list \
    && sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g'  /etc/apt/sources.list \
    &&  apt-get update && apt-get install -y git gcc curl make


RUN curl -sL https://studygolang.com/dl/golang/go1.23.0.linux-amd64.tar.gz | tar zxf - -C /usr/local
ENV PATH="/usr/local/go/bin:$PATH"

ADD . .
RUN make orderer GO_TAGS=${GO_TAGS} FABRIC_VER=${FABRIC_VER}

FROM ubuntu:20.04

ARG TARGETOS=linux
ARG TARGETARCH=amd64
ARG FABRIC_VER=hll

# set up nsswitch.conf for Go's "netgo" implementation
# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275
# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf
RUN echo 'hosts: files dns' > /etc/nsswitch.conf
ENV FABRIC_CFG_PATH /etc/hyperledger/fabric
VOLUME /etc/hyperledger/fabric
VOLUME /var/hyperledger
COPY --from=builder build/bin /usr/local/bin
COPY --from=builder sampleconfig/msp ${FABRIC_CFG_PATH}/msp
COPY --from=builder sampleconfig/orderer.yaml ${FABRIC_CFG_PATH}
COPY --from=builder sampleconfig/configtx.yaml ${FABRIC_CFG_PATH}
EXPOSE 7050
CMD ["orderer"]
